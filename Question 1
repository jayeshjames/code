/**
 * 
 * Find the number of ways you can sum to 'n' using values in a set of numbers
 * assuming you have infinite supply for each value.
 * 
 * e.g. if s={1, 2, 3} and n=4 then there are 4 ways: 
 * 1. {1,1,1,1} 
 * 2. {1,1,2} 
 * 3. {2,2} 
 * 4. {1,3}
 * 
 * Input constraints:
 * 
 * 1. s is non-empty with positive non-repeating numbers greater than 0.
 * 2. The answer will not exceed Integer.MAX_VALUE.
 * 3. n > 0
 * 
 */

public class NumberOfWays {
  public static int numberOfWays(int s[], int n) {
    int[] t = new int[n + 1];
    t[0] = 1;

    for (int i = 0; i < s.length; i++)
      for (int j = s[i]; j <= n; j++)
        t[j] += t[j - s[i]];

    return t[n];
  }

  public static void main(String[] args) {
    int[] s = { 1, 2, 3};
    System.out.println(numberOfWays(s, 4));
  }
}


// Output: 

4
